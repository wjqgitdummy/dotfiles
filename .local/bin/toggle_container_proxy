#!/bin/bash

# check run with root 
if [ "$EUID" -ne 0 ]; then
    echo "Please run as root"
    exit
fi

# grab params from command line 
COMMAND=$1
CONTAINER_NAME=$2
https_proxy=$3
no_proxy=$4

# check if command is valid (add,rm)
if [ "$COMMAND" != "add" ] && [ "$COMMAND" != "rm" ]; then
    print_error "Invalid command $COMMAND"
    exit 1
fi

# check if num of args are correct
if [ "$COMMAND" = "add" ] && [ "$#" -ne 4 ]; then
    echo "Illegal number of parameters"
    echo "Usage: toggle_container_proxy.sh add <container_name> <https_proxy> <no_proxy>"
    exit
fi 

if [ "$COMMAND" = "rm" ] && [ "$#" -ne 2 ]; then
    echo "Illegal number of parameters"
    echo "Usage: toggle_container_proxy.sh rm <container_name>"
    exit
fi 

# grab container id based on container name
CONTAINER_ID=`docker inspect --format="{{.Id}}" "${CONTAINER_NAME}"`
CONFIG_FILE=/var/lib/docker/containers/$CONTAINER_ID/config.v2.json


# utils
function print_error() {
    printf "\e[1;31;47m\tERROR\t %s \e[0m\n" "$1"
}

function print_notice() {
    printf "\e[1;34;47m %s \e[0m\n" "$1"
}

# restart docker daemon
function restart_docker() {
    print_notice "Restarting docker daemon"
    # sudo systemctl stop docker
    # sudo systemctl start docker
    sudo systemctl restart docker
}

# config mod 
function add_proxy() {
    print_notice "Adding proxy to $CONTAINER_FILE"
    # add proxy to config
    command sudo sed -i -E 's/(\"Env\"\:\[)(\"PATH)/\1\"http_proxy='"${https_proxy//\//\\/}"""'\",\"https_proxy='"${https_proxy//\//\\/}"""'\",\"no_proxy='"${no_proxy//\//\\/}"""'\",\2/' $CONFIG_FILE
    
    restart_docker
}

function rm_proxy() {
    print_notice "Remove proxy to $CONTAINER_FILE"
    # remove proxy from config
    command sudo sed -i -E 's/(\"Env\":\[)(\"http.*)(\"PATH=)/\1\3/' $CONFIG_FILE

    restart_docker
}

print_notice "${COMMAND} proxy from ${CONTAINER_ID}"

# check if container exists
if [ ! -f $CONFIG_FILE ]; then
    print_error "Container $CONTAINER_NAME does not exist"
    exit 1
fi

task="${COMMAND}_proxy"

$task
